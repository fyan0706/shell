git clone http://192.168.20.146/sce/tool.git # 需要用户名密码
cd tool/
git branch # 查看现在的branch
git checkout develop # 切换到branch:develop
git branch # 查看现在的branch
git pull origin develop # 更新新branch下代码(不一定需要)

checkin:
git pull
git status
git add precise_coverage.sh guest.sh
git status
git commit -m "go through the total script"
git push
*****************************************
git 免用户名/密码
查看配置
git config user.name
git config user.email
修改
git config --global user.name "abc(新的用户名)"
git config --global user.email "abc@qq.com(新的邮箱)"
git config --global user.password"123456(新的密码)"

For just one repo:
git config user.name "Your Name Here"
git config user.email your@email.com

For (global) default email (which is configured in your ~/.gitconfig):
git config --global user.name "Your Name Here"
git config --global user.email your@email.com

弄掉密码
git config --system --unset credential.helper
重新存储密码
git config --global credential.helper store
------------------------------------
vim ~/.gitconfig 
在配置加入如下
[credential]
helper = store
例============================
cat ~/.gitconfig 
[user]
	name = yanf
	email = yan_feng@tsinghua.edu.cn
	password = aaaaaaaaaa
[push]
	default = matching
[credential]
	helper = store
*****************************************
git diff
*****************************************
当删掉~/.gitconfig后 user/passwd/email 需要重设
当已经add/commit后, 改了user/passwd/email 需要撤销add/commit 否则push不了
*****************************************
撤销add
git status 查看当下更新的文件
git reset HEAD 表示撤销上次add的所有文件
git reset HEAD dir/dir/test.php 撤销指定文件

撤销commit
git reset --soft HEAD^  //这样就成功的撤销了你上次的commit（仅仅是撤回commit操作，代码仍然保留）
**************************************
gitlab删除自建branch
登录网页
project下有个branches 点进去 找到要删的branch, 旁边会有个垃圾桶
